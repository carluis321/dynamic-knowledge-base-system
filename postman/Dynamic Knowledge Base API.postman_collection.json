{
	"info": {
		"_postman_id": "48af8bce-1fc2-49da-86b8-c3e7afbf4703",
		"name": "Dynamic Knowledge Base API",
		"description": "Complete API collection for the Dynamic Knowledge Base system with Express v5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4309988"
	},
	"item": [
		{
			"name": "Health & Info",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "API Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('authToken', response.token);",
									"    pm.environment.set('userId', response.user.id);",
									"    pm.environment.set('userRole', response.user.role);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users (Admin Only)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID (Admin/Editor)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User (Admin Only)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"Editor\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User (Admin Only)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe Updated\",\n  \"email\": \"john.doe.updated@example.com\",\n  \"role\": \"Admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User (Admin Only)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Topics",
			"item": [
				{
					"name": "Get All Topics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/topics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"topics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Topic by ID (with Composite Structure)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/topics/b2c3d4e5-6f70-4b8c-8d9e-1f2a3b4c5d6e",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"topics",
								"b2c3d4e5-6f70-4b8c-8d9e-1f2a3b4c5d6e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Topic",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('topicId', response.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New Topic\",\n  \"content\": \"This is a new topic about programming concepts\",\n  \"parentTopicId\": null\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/topics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"topics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Child Topic",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Child Topic\",\n  \"content\": \"This is a child topic\",\n  \"parentTopicId\": \"{{topicId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/topics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"topics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Topic",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Topic Name\",\n  \"content\": \"Updated content for the topic\",\n  \"parentTopicId\": null\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/topics/{{topicId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"topics",
								"{{topicId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Topic (with Children)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/topics/{{topicId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"topics",
								"{{topicId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Shortest Path Between Topics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"startTopicId\": \"e5f6a7b8-92a3-4ebf-9a01-4c5d6e7f8091\",\n  \"endTopicId\": \"b7c8d9e0-1a2b-4c3d-8e9f-0a1b2c3d4e5f\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/topics/shortest-path",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"topics",
								"shortest-path"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Resources",
			"item": [
				{
					"name": "Get All Resources",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/resources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"resources"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Resource by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/resources/{{resourceId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"resources",
								"{{resourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Resources by Topic ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/resources/topic/a1b2c3d4-5e6f-4a7b-9c8d-0e1f2a3b4c5d",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"resources",
								"topic",
								"a1b2c3d4-5e6f-4a7b-9c8d-0e1f2a3b4c5d"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Resource",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('resourceId', response.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"PostgreSQL Documentation\",\n  \"description\": \"Official PostgreSQL documentation for advanced features\",\n  \"url\": \"https://www.postgresql.org/docs/\",\n  \"type\": \"Documentation\",\n  \"topicId\": \"e5f6a7b8-92a3-4ebf-9a01-4c5d6e7f8091\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/resources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"resources"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Video Resource",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"React Hooks Tutorial\",\n  \"description\": \"Complete guide to React Hooks with practical examples\",\n  \"url\": \"https://www.youtube.com/watch?v=example\",\n  \"type\": \"Video\",\n  \"topicId\": \"f1e2d3c4-b5a6-4d7e-8f90-1a2b3c4d5e6f\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/resources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"resources"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Article Resource",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Best Practices for CI/CD\",\n  \"description\": \"Industry best practices for continuous integration and deployment\",\n  \"url\": \"https://example.com/cicd-best-practices\",\n  \"type\": \"Article\",\n  \"topicId\": \"07b8c9d0-ab15-4011-9c23-6e7f8091a2b3\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/resources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"resources"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Resource",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated PostgreSQL Documentation\",\n  \"description\": \"Updated description for PostgreSQL documentation\",\n  \"url\": \"https://www.postgresql.org/docs/current/\",\n  \"type\": \"Documentation\",\n  \"topicId\": \"e5f6a7b8-92a3-4ebf-9a01-4c5d6e7f8091\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/resources/{{resourceId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"resources",
								"{{resourceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Resource",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/resources/{{resourceId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"resources",
								"{{resourceId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}